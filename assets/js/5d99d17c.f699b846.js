"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9820],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,h=m["".concat(o,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2365:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>o,metadata:()=>u,toc:()=>p,default:()=>m});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],s={id:"getting-started",title:"Contributing to Metals"},o=void 0,u={unversionedId:"contributors/getting-started",id:"contributors/getting-started",title:"Contributing to Metals",description:"Whenever you are stuck or unsure, please open an issue or",source:"@site/target/docs/contributors/getting-started.md",sourceDirName:"contributors",slug:"/contributors/getting-started",permalink:"/metals/docs/contributors/getting-started",editUrl:"https://github.com/scalameta/metals/edit/main/docs/contributors/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Contributing to Metals"},sidebar:"docs",previous:{title:"Project Goals",permalink:"/metals/docs/contributors/project-goals"},next:{title:"Contributing to the website",permalink:"/metals/docs/contributors/updating-website"}},p=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Project structure",id:"project-structure",children:[],level:2},{value:"Git hooks",id:"git-hooks",children:[],level:2},{value:"Related projects",id:"related-projects",children:[],level:2},{value:"Unit tests",id:"unit-tests",children:[{value:"Manually testing a <code>LspSuite</code>",id:"manually-testing-a-lspsuite",children:[],level:3}],level:2},{value:"Manual tests",id:"manual-tests",children:[{value:"Visual Studio Code",id:"visual-studio-code",children:[],level:3},{value:"Vim",id:"vim",children:[],level:3},{value:"Workspace logs",id:"workspace-logs",children:[],level:3},{value:"JSON-RPC trace",id:"json-rpc-trace",children:[],level:3},{value:"JVM Debugging",id:"jvm-debugging",children:[],level:3},{value:"Updating sbt-launcher",id:"updating-sbt-launcher",children:[],level:3}],level:2}],c={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Whenever you are stuck or unsure, please open an issue or\n",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/DwTc8xbNDd"},"ask us on Discord"),". This project follows\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/scalameta/scalameta/blob/master/CONTRIBUTING.md"},"Scalameta's contribution guidelines"),"."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"You will need the following applications installed:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java 11 or 8 - Make sure ",(0,r.kt)("inlineCode",{parentName:"li"},"JAVA_HOME")," points to a Java 11 or 8 installation.\nMetals will need to build and run on ",(0,r.kt)("em",{parentName:"li"},"both"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sbt")," (for building a local version of the server)")),(0,r.kt)("h2",{id:"project-structure"},"Project structure"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"metals")," the main project with sources of the Metals language server."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sbt-metals")," the sbt plugin used when users are using the BSP support from\nsbt to ensure semanticDB is being produced by sbt."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mtags")," Scala version specific module used to interact with the Scala\npresentation compiler. It's a dependency of the ",(0,r.kt)("inlineCode",{parentName:"li"},"metals")," project and can\nadditionally be used by via ",(0,r.kt)("inlineCode",{parentName:"li"},"mtags-interfaces")," to support multiple Scala\nversions inside the Metals server. It's also used by other projects like\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/scalameta/metabrowse"},"Metabrowse"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mtags-interfaces")," - java interfaces for the presentation compiler."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tests/cross")," - tests targeting cross builds for common features such as\nhover, completions, signatures etc."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tests/input")," example Scala code that is used as testing data for unit tests."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tests/unit")," moderately fast-running unit tests."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tests/slow")," slow integration tests."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"test-workspace")," demo project for manually testing Metals through an editor."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"docs")," documentation markdown for the Metals website."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"metals-docs")," methods used for generating documentation across multiple pages\nin ",(0,r.kt)("inlineCode",{parentName:"li"},"docs"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"website")," holds the static site configuraton, style and blogs posts for the\nMetals website.")),(0,r.kt)("h2",{id:"git-hooks"},"Git hooks"),(0,r.kt)("p",null,"This git repository has a pre-push hook to run Scalafmt."),(0,r.kt)("p",null,"The CI also uses Scalafix to assert that there a no unused imports. To\nautomatically remove unused imports run ",(0,r.kt)("inlineCode",{parentName:"p"},"sbt scalafixAll"),". We don't run Scalafix\nas a pre-push git hook since starting sbt takes a long time."),(0,r.kt)("h2",{id:"related-projects"},"Related projects"),(0,r.kt)("p",null,"The improvement you are looking to contribute may belong in a separate\nrepository:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/scalameta/metals-vscode/"},"scalameta/metals-vscode"),": the\nVisual Studio Code extension for Metals."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/scalameta/coc-metals/"},"scalameta/coc-metals"),": the\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/neoclide/coc.nvim"},"coc.nvim")," Vim/Nvim extension for\nMetals."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/scalameta/metals-eclipse/"},"scalameta/metals-eclipse"),": the\nEclipse extension for Metals."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/scalameta/scalameta/"},"scalameta/scalameta"),": SemanticDB,\nparsing, tokenization."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/scalameta/munit/"},"scalameta/munit"),": Test framework used in\nthe main Metals repository"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/scalacenter/bloop/"},"scalacenter/bloop"),": build server for\ncompilation."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/scala/scala/"},"scala/scala"),": presentation compiler."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/scalameta/scalafmt/"},"scalameta/scalafmt"),": code formatting."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/scalacenter/scalafix/"},"scalacenter/scalafix"),": code\nrefactoring and linting.")),(0,r.kt)("h2",{id:"unit-tests"},"Unit tests"),(0,r.kt)("p",null,"To run the unit tests open an sbt shell and run ",(0,r.kt)("inlineCode",{parentName:"p"},"unit/test")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sbt\n# (recommended) run a specific test suite, great for edit/test/debug workflows.\n> unit/testOnly tests.DefinitionSuite\n# run a specific test case inside the suite.\n> unit/testOnly tests.DefinitionSuite -- *exact-test-name*\n# run unit tests, moderately fast but still a bit too slow for edit/test/debug workflows.\n> unit/test\n# run slow integration tests, takes several minutes.\n> slow/test\n# run presentation compiler tests, these are the quickest tests to run.\n> cross/test\n# run presentation compiler tests for all Scala versions.\n> +cross/test\n# (not recommended) run all tests, slow. It's better to target individual projects.\n> test\n")),(0,r.kt)("h3",{id:"manually-testing-a-lspsuite"},"Manually testing a ",(0,r.kt)("inlineCode",{parentName:"h3"},"LspSuite")),(0,r.kt)("p",null,"Every test suite that extends ",(0,r.kt)("inlineCode",{parentName:"p"},"LspSuite")," generates a workspace directory under\n",(0,r.kt)("inlineCode",{parentName:"p"},"tests/unit/target/e2e/$suitename/$testname"),". To debug why a ",(0,r.kt)("inlineCode",{parentName:"p"},"LspSuite")," might be\nfailing, run the test once and then open it directly in your editor. For\nexample, for the test case ",(0,r.kt)("inlineCode",{parentName:"p"},'"deprecated-scala"')," in ",(0,r.kt)("inlineCode",{parentName:"p"},"WarningsLspSuite")," run the\nfollowing command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"code tests/unit/target/e2e/warnings/deprecated-scala\n")),(0,r.kt)("p",null,'If you are using VS Code, make sure to update the "Server Version" setting to\nuse your locally published version of Metals.'),(0,r.kt)("h2",{id:"manual-tests"},"Manual tests"),(0,r.kt)("p",null,"Some functionality is best to manually test through an editor. A common workflow\nwhile iterating on a new feature is to run ",(0,r.kt)("inlineCode",{parentName:"p"},"publishLocal")," and then open an\neditor in a small demo build."),(0,r.kt)("h3",{id:"visual-studio-code"},"Visual Studio Code"),(0,r.kt)("p",null,'Install the Metals extension from the Marketplace by searching for "Metals".'),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"vscode:extension/scalameta.metals"},"Click here to install the Metals VS Code plugin")),(0,r.kt)("p",null,'Next, update the "Server version" setting under preferences to point to the\nversion you published locally via ',(0,r.kt)("inlineCode",{parentName:"p"},"sbt publishLocal"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/ogVWI1t.png",alt:"Metals server version setting"})),(0,r.kt)("p",null,"When you make changes in the Metals Scala codebase"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"run ",(0,r.kt)("inlineCode",{parentName:"li"},"sbt publishLocal")),(0,r.kt)("li",{parentName:"ul"},'execute the "Metals: Restart server" command in Visual Studio Code (via\ncommand palette)')),(0,r.kt)("p",null,"It's important to note that ",(0,r.kt)("inlineCode",{parentName:"p"},"sbt publishLocal")," will create artifacts only for\nthe Scala version currently used in Metals and trying to use the snapshot\nversion with any other Scala version will not work. In that case you need to run\na full cross publish with ",(0,r.kt)("inlineCode",{parentName:"p"},"sbt +publishLocal"),"."),(0,r.kt)("h3",{id:"vim"},"Vim"),(0,r.kt)("p",null,"First, follow the ",(0,r.kt)("a",{parentName:"p",href:"/metals/docs/editors/vim"},(0,r.kt)("inlineCode",{parentName:"a"},"vim")," installation instruction"),"."),(0,r.kt)("p",null,"If you're using coc-metals:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"run ",(0,r.kt)("inlineCode",{parentName:"li"},"sbt publishLocal")),(0,r.kt)("li",{parentName:"ul"},"open ",(0,r.kt)("inlineCode",{parentName:"li"},":CocConfig")," and put your new snapshot version in\n",(0,r.kt)("inlineCode",{parentName:"li"},"metals.serverVersion"),"."),(0,r.kt)("li",{parentName:"ul"},"you will then be prompted to reload, which will restart the server.")),(0,r.kt)("p",null,"If you publish again, you then just need to execute the ",(0,r.kt)("inlineCode",{parentName:"p"},"metals.restartServer command"),"."),(0,r.kt)("p",null,"If you are using another Vim client, write a ",(0,r.kt)("inlineCode",{parentName:"p"},"new-metals-vim")," script that builds\na new ",(0,r.kt)("inlineCode",{parentName:"p"},"metals-vim")," bootstrap script using the locally published version."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"coursier bootstrap \\\n  --java-opt -Dmetals.client=vim-lsc \\\n  org.scalameta:metals_2.12:0.11.2-SNAPSHOT \\ # double-check version here\n  -r bintray:scalacenter/releases \\\n  -o /usr/local/bin/metals-vim -f\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," if you're able to configure your client using initialization options,\nthen the ",(0,r.kt)("inlineCode",{parentName:"p"},"client")," property is not necessary. You can see all the options\n",(0,r.kt)("a",{parentName:"p",href:"https://scalameta.org/metals/docs/integrations/new-editor#initializationoptions"},"here"),"."),(0,r.kt)("p",null,"Finally, start Vim with the local Metals version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd test-workspace # any directory you want to manually test Metals\nnew-metals-vim && vim build.sbt # remember to have the script in your $PATH\n")),(0,r.kt)("p",null,"When you make changes in the Metals Scala codebase, run ",(0,r.kt)("inlineCode",{parentName:"p"},"sbt publishLocal"),", quit\nvim and re-run ",(0,r.kt)("inlineCode",{parentName:"p"},"new-metals-vim && vim build.sbt"),"."),(0,r.kt)("h3",{id:"workspace-logs"},"Workspace logs"),(0,r.kt)("p",null,"Metals logs workspace-specific information to the\n",(0,r.kt)("inlineCode",{parentName:"p"},"$WORKSPACE/.metals/metals.log")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"tail -f .metals/metals.log\n")),(0,r.kt)("p",null,"These logs contain information that may be relevant for regular users."),(0,r.kt)("h3",{id:"json-rpc-trace"},"JSON-RPC trace"),(0,r.kt)("p",null,"To see the trace of incoming/outgoing JSON communication with the text editor\nor build server, create empty files in ",(0,r.kt)("inlineCode",{parentName:"p"},"$WORKSPACE/.metals/")," or your machine cache\ndirectory. "),(0,r.kt)("p",null,"However, we do not recommend using your machine cache directory because\ntrace files located there are shared between all Metals instances, hence multiple\nservers can override the same file. Using ",(0,r.kt)("inlineCode",{parentName:"p"},"$WORKSPACE/.metals/")," solves this issue and\nalso allows user to have more precise control over which metals instances log\ntheir JSON-RPC communication."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Linux and macOS\ntouch $WORKSPACE/.metals/lsp.trace.json # text editor\ntouch $WORKSPACE/.metals/bsp.trace.json # build server\ntouch $WORKSPACE/.metals/dap-server.trace.json # debug adapter\ntouch $WORKSPACE/.metals/dap-client.trace.json # debug adapter\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Windows\ntype nul > $WORKSPACE/.metals/lsp.trace.json # text editor\ntype nul > $WORKSPACE/.metals/bsp.trace.json # build server\ntype nul > $WORKSPACE/.metals/dap-server.trace.json # debug adapter\ntype nul > $WORKSPACE/.metals/dap-client.trace.json # debug adapter\n")),(0,r.kt)("p",null,"Next when you start Metals, watch the logs with ",(0,r.kt)("inlineCode",{parentName:"p"},"tail -f"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Linux and macOS\ntail -f $WORKSPACE/.metals/lsp.trace.json\n")),(0,r.kt)("p",null,"The traces are very verbose so it's recommended to delete the files if you are\nnot interested in debugging the JSON communication."),(0,r.kt)("h3",{id:"jvm-debugging"},"JVM Debugging"),(0,r.kt)("p",null,"To debug the JVM with the Metals server, add a property to your\n",(0,r.kt)("inlineCode",{parentName:"p"},"Server Properties")," with the usual Java debugging flags, making sure you have\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"quiet")," option on. It's important to remember about the flag, as the server\nuses standard input/output to communicate with the client, and the default\noutput of the debuggee interferes with that."),(0,r.kt)("p",null,"This property will make your server run in debug mode on port 5005 without\nwaiting for the debugger to connect:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005,quiet=y\n")),(0,r.kt)("h3",{id:"updating-sbt-launcher"},"Updating sbt-launcher"),(0,r.kt)("p",null,"The easiest way to update the sbt-launcher is with the following coursier\ncommand:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'cp "$(cs fetch org.scala-sbt:sbt-launch:<version>)" sbt-launch.jar\n')),(0,r.kt)("p",null,"This will allow you to not have to do some of the manual steps with the launcher\nproperties file listed ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sbt/launcher"},"here"),"."))}m.isMDXComponent=!0}}]);