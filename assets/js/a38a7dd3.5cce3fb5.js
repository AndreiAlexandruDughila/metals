"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7637],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},658:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,metadata:()=>s,toc:()=>p,default:()=>d});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={id:"eclipse",title:"Eclipse"},s={unversionedId:"editors/eclipse",id:"editors/eclipse",isDocsHomePage:!1,title:"Eclipse",description:"Metals works with Eclipse thanks to the",source:"@site/target/docs/editors/eclipse.md",sourceDirName:"editors",slug:"/editors/eclipse",permalink:"/metals/docs/editors/eclipse",editUrl:"https://github.com/scalameta/metals/edit/main/docs/target/docs/editors/eclipse.md",version:"current",frontMatter:{id:"eclipse",title:"Eclipse"},sidebar:"docs",previous:{title:"Emacs",permalink:"/metals/docs/editors/emacs"},next:{title:"Online IDEs",permalink:"/metals/docs/editors/online-ides"}},p=[{value:"Requirements",id:"requirements",children:[]},{value:"Installing the plugin",id:"installing-the-plugin",children:[]},{value:"Running commands",id:"running-commands",children:[]},{value:"Files and Directories to include in your Gitignore",id:"files-and-directories-to-include-in-your-gitignore",children:[]},{value:"Worksheets",id:"worksheets",children:[{value:"Getting started with Worksheets",id:"getting-started-with-worksheets",children:[]},{value:"Evaluations",id:"evaluations",children:[]},{value:"Using dependencies in worksheets",id:"using-dependencies-in-worksheets",children:[]}]}],c={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Metals works with Eclipse thanks to the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/scalameta/metals-eclipse"},(0,i.kt)("inlineCode",{parentName:"a"},"metals-eclipse"))," plugin."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Notice")," Eclipse integration is still under development and might lack some of\nthe features"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/SxD6PcJ.gif",alt:"Eclipse demo"})),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Java 8, 11, 17 provided by OpenJDK or Oracle"),". Eclipse OpenJ9 is not\nsupported, please make sure the ",(0,i.kt)("inlineCode",{parentName:"p"},"JAVA_HOME")," environment variable\npoints to a valid Java 8, 11 or 17 installation."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"macOS, Linux or Windows"),". Metals is developed on many operating systems and\nevery PR is tested on Ubuntu, Windows and MacOS."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Scala 2.13, 2.12, 2.11 and Scala 3"),". Metals supports these Scala versions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Scala 2.13"),":\n2.13.6, 2.13.5, 2.13.4, 2.13.3, 2.13.2, 2.13.1, 2.13.0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Scala 2.12"),":\n2.12.14, 2.12.13, 2.12.12, 2.12.11, 2.12.10, 2.12.9, 2.12.8")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Scala 2.11"),":\n2.11.12")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Scala 3"),":\n3.1.0-RC1, 3.0.2, 3.0.1, 3.0.0"))),(0,i.kt)("p",null,"Note that 2.11.x support is deprecated and it will be removed in future releases.\nIt's recommended to upgrade to Scala 2.12 or Scala 2.13"),(0,i.kt)("h2",{id:"installing-the-plugin"},"Installing the plugin"),(0,i.kt)("p",null,"In your eclipse installation go to install new software and point the repository\nto:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"http://scalameta.org/metals-eclipse/update/\n")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://i.imgur.com/PHqyJNL.gif",alt:"Install plugin"})),(0,i.kt)("h2",{id:"running-commands"},"Running commands"),(0,i.kt)("p",null,"All commands including ",(0,i.kt)("inlineCode",{parentName:"p"},"Import build")," can be run currently via the browser interface\nlocated at ",(0,i.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:5031/"),". We recommend having it open to import the build\nthat is required for Metals to work properly."),(0,i.kt)("p",null,"Additionally, the import build message should pop out when opening a new workspace,\nor it can be run via Metals Tree View which needs to be activated separately.\nThese features currently still need some polishing, but are usable."),(0,i.kt)("h2",{id:"files-and-directories-to-include-in-your-gitignore"},"Files and Directories to include in your Gitignore"),(0,i.kt)("p",null,"The Metals server places logs and other files in the ",(0,i.kt)("inlineCode",{parentName:"p"},".metals")," directory. The\nBloop compile server places logs and compilation artifacts in the ",(0,i.kt)("inlineCode",{parentName:"p"},".bloop"),"\ndirectory. The Bloop plugin that generates Bloop configuration is added in the\n",(0,i.kt)("inlineCode",{parentName:"p"},"metals.sbt")," file, which is added at ",(0,i.kt)("inlineCode",{parentName:"p"},"project/metals.sbt")," as well as further\n",(0,i.kt)("inlineCode",{parentName:"p"},"project")," directories depending on how deep ",(0,i.kt)("inlineCode",{parentName:"p"},"*.sbt")," files need to be supported.\nTo support each ",(0,i.kt)("inlineCode",{parentName:"p"},"*.sbt")," file Metals needs to create an additional file at\n",(0,i.kt)("inlineCode",{parentName:"p"},"./project/project/metals.sbt")," relative to the sbt file.\nWorking with Ammonite scripts will place compiled scripts into the ",(0,i.kt)("inlineCode",{parentName:"p"},".ammonite")," directory.\nIt's recommended to exclude these directories and files\nfrom version control systems like git."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# ~/.gitignore\n.metals/\n.bloop/\n.ammonite/\nmetals.sbt\n")),(0,i.kt)("h2",{id:"worksheets"},"Worksheets"),(0,i.kt)("p",null,"Worksheets are a great way to explore an api, try out an idea, or code\nup an example and quickly see the evaluated expression or result. Behind\nthe scenes worksheets are powered by the great work done in\n",(0,i.kt)("a",{parentName:"p",href:"https://scalameta.org/mdoc/"},"mdoc"),"."),(0,i.kt)("h3",{id:"getting-started-with-worksheets"},"Getting started with Worksheets"),(0,i.kt)("p",null,"To get started with a worksheet you can either use the ",(0,i.kt)("inlineCode",{parentName:"p"},"metals.new-scala-file"),"\ncommand and select ",(0,i.kt)("em",{parentName:"p"},"Worksheet")," or create a file called ",(0,i.kt)("inlineCode",{parentName:"p"},"*.worksheet.sc"),".\nThis format is important since this is what tells Metals that it's meant to be\ntreated as a worksheet and not just a Scala script. Where you create the\nscript also matters. If you'd like to use classes and values from your\nproject, you need to make sure the worksheet is created inside of your ",(0,i.kt)("inlineCode",{parentName:"p"},"src"),"\ndirectory. You can still create a worksheet in other places, but you will\nonly have access to the standard library and your dependencies."),(0,i.kt)("h3",{id:"evaluations"},"Evaluations"),(0,i.kt)("p",null,"After saving you'll see the result of the expression as a comment as the end of the line.\nYou may not see the full result for example if it's too long, so you are also\nable to hover on the comment to expand."),(0,i.kt)("p",null,"Keep in mind that you don't need to wrap your code in an ",(0,i.kt)("inlineCode",{parentName:"p"},"object"),". In worksheets\neverything can be evaluated at the top level."),(0,i.kt)("h3",{id:"using-dependencies-in-worksheets"},"Using dependencies in worksheets"),(0,i.kt)("p",null,"You are able to include an external dependency in your worksheet by including\nit in one of the following two ways."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"// $dep.`organisation`::artifact:version` style\nimport $dep.`com.lihaoyi::scalatags:0.7.0`\n\n// $ivy.`organisation::artifact:version` style\nimport $ivy.`com.lihaoyi::scalatags:0.7.0`\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"::")," is the same as ",(0,i.kt)("inlineCode",{parentName:"p"},"%%")," in sbt, which will append the current Scala binary version\nto the artifact name."),(0,i.kt)("p",null,"You can also import ",(0,i.kt)("inlineCode",{parentName:"p"},"scalac")," options in a special ",(0,i.kt)("inlineCode",{parentName:"p"},"$scalac")," import like below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"import $scalac.`-Ywarn-unused`\n")))}d.isMDXComponent=!0}}]);